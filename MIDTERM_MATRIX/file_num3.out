Matrices
*****************************************
Matrix to send and receive columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
Vector type:
count 12
blocklength 1
stride 13
Rows 13 Cols 13 in matrix
Rank 3 receiving value at ELEM(new_mat,1,0)=3.000000 from 2
Note rows may not be NULL especially if there are ghost rows above and below the core matrix. When we send the columns we are excluding the elements that exist in the ghost rows.Rank 3 sending value at ELEM(new_mat,1,1)=3.000000 to 2
Matrix after sending and receiving columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
Matrix to send and receive rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
Rank 3 receiving value at ELEM(new_mat,0,0)=3.000000 from 1
Sending total of 13 columns
Rank 3 sending value at ELEM(new_mat,1,0)=2.000000 to 1
Sending total of 13 columns
Matrix after sending and receiving rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
Matrices
*****************************************
Updating Border ghost 0
Updating Left Border West
col_start 1 col_end 2
row_start 2 row_end 13
ghost_left 1 k 0 get_col_start 1

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   0 
  0   0   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  13   0   0   0   0   0   0   0   0   0   0   0 
Updating North Row Outer Margin

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   0 
  0  15  18  18  18  18  18  18  18  18  18  18  11 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  13   0   0   0   0   0   0   0   0   0   0   0 
Matrix to send and receive columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   0 
  0  15  18  18  18  18  18  18  18  18  18  18  11 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  21   0   0   0   0   0   0   0   0   0   0   0 
  0  13   0   0   0   0   0   0   0   0   0   0   0 
Vector type:
count 12
blocklength 1
stride 13
Rows 13 Cols 13 in matrix
Rank 3 receiving value at ELEM(new_mat,1,0)=0.000000 from 2
Note rows may not be NULL especially if there are ghost rows above and below the core matrix. When we send the columns we are excluding the elements that exist in the ghost rows.Rank 3 sending value at ELEM(new_mat,1,1)=15.000000 to 2
Matrix after sending and receiving columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   0 
 13  15  18  18  18  18  18  18  18  18  18  18  11 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 12  13   0   0   0   0   0   0   0   0   0   0   0 
After sending and receiving ghost cols

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   0 
 13  15  18  18  18  18  18  18  18  18  18  18  11 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 19  21   0   0   0   0   0   0   0   0   0   0   0 
 12  13   0   0   0   0   0   0   0   0   0   0   0 
Matrix to send and receive rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   0 
 13  15  18  18  18  18  18  18  18  18  18  18  11 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 12  13  15  15  15  15   0   0   0   0   0   0   0 
Rank 3 receiving value at ELEM(new_mat,0,0)=0.000000 from 1
Sending total of 13 columns
Rank 3 sending value at ELEM(new_mat,1,0)=13.000000 to 1
Sending total of 13 columns
Matrix after sending and receiving rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 12  13  15  15  15  15   0   0   0   0   0   0   0 
After sending and receiving ghost rows if checkerboard 
Should be halfway through core matrix calculation
Here is the matrix that should have received the rows if synchronous and odd

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 19  21  24  24  24  24   0   0   0   0   0   0   0 
 12  13  15  15  15  15   0   0   0   0   0   0   0 
Here is the matrix with half the core calculated
Temp2 flag 2

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
Printing new_temp after completion ofconway's game

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 12  13  15  15  15  15  15  15  15  15  15  15   9 
After conways completed

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 12  13  15  15  15  15  15  15  15  15  15  15   9 

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 12  13  15  15  15  15  15  15  15  15  15  15   9 
Matrix to send and receive columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 12  13  15  15  15  15  15  15  15  15  15  15   9 
Vector type:
count 12
blocklength 1
stride 13
Rows 13 Cols 13 in matrix
Rank 3 receiving value at ELEM(new_mat,1,0)=13.000000 from 2
Note rows may not be NULL especially if there are ghost rows above and below the core matrix. When we send the columns we are excluding the elements that exist in the ghost rows.Rank 3 sending value at ELEM(new_mat,1,1)=15.000000 to 2
Matrix after sending and receiving columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 12  13  15  15  15  15  15  15  15  15  15  15   9 

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 12  13  15  15  15  15  15  15  15  15  15  15   9 
Matrix to send and receive rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 12  13  15  15  15  15  15  15  15  15  15  15   9 
Rank 3 receiving value at ELEM(new_mat,0,0)=9.000000 from 1
Sending total of 13 columns
Rank 3 sending value at ELEM(new_mat,1,0)=13.000000 to 1
Sending total of 13 columns
Matrix after sending and receiving rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 12  13  15  15  15  15  15  15  15  15  15  15   9 

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 19  21  24  24  24  24  24  24  24  24  24  24  15 
 12  13  15  15  15  15  15  15  15  15  15  15   9 
Updating Border ghost 0
Updating Left Border West
col_start 1 col_end 2
row_start 2 row_end 13
ghost_left 1 k 0 get_col_start 1

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  2   3   3   3   3   3   3   3   3   3   3   3   3 
  2 153   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 147   3   3   3   3   3   3   3   3   3   3   3 
  2  91   3   3   3   3   3   3   3   3   3   3   3 
Updating North Row Outer Margin

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  2 129 141 150 150 150 150 150 150 150 150 129  80 
  2 153   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 147   3   3   3   3   3   3   3   3   3   3   3 
  2  91   3   3   3   3   3   3   3   3   3   3   3 
Matrix to send and receive columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  2 129 141 150 150 150 150 150 150 150 150 129  80 
  2 153   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 171   3   3   3   3   3   3   3   3   3   3   3 
  2 147   3   3   3   3   3   3   3   3   3   3   3 
  2  91   3   3   3   3   3   3   3   3   3   3   3 
Vector type:
count 12
blocklength 1
stride 13
Rows 13 Cols 13 in matrix
Rank 3 receiving value at ELEM(new_mat,1,0)=2.000000 from 2
Note rows may not be NULL especially if there are ghost rows above and below the core matrix. When we send the columns we are excluding the elements that exist in the ghost rows.Rank 3 sending value at ELEM(new_mat,1,1)=129.000000 to 2
Matrix after sending and receiving columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  0   1   1   1   1   1   1   1   1   1   1   1   1 
107 129 141 150 150 150 150 150 150 150 150 129  80 
131 153   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
128 147   3   3   3   3   3   3   3   3   3   3   3 
 79  91   3   3   3   3   3   3   3   3   3   3   3 
After sending and receiving ghost cols

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  0   1   1   1   1   1   1   1   1   1   1   1   1 
107 129 141 150 150 150 150 150 150 150 150 129  80 
131 153   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
149 171   3   3   3   3   3   3   3   3   3   3   3 
128 147   3   3   3   3   3   3   3   3   3   3   3 
 79  91   3   3   3   3   3   3   3   3   3   3   3 
Matrix to send and receive rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  0   1   1   1   1   1   1   1   1   1   1   1   1 
107 129 141 150 150 150 150 150 150 150 150 129  80 
131 153 165 174 174 174   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
128 147 157 165 165 165   3   3   3   3   3   3   3 
 79  91  97 102 102 102   3   3   3   3   3   3   3 
Rank 3 receiving value at ELEM(new_mat,0,0)=0.000000 from 1
Sending total of 13 columns
Rank 3 sending value at ELEM(new_mat,1,0)=107.000000 to 1
Sending total of 13 columns
Matrix after sending and receiving rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
 63  85  97 106 106 106 106 106 106 106 106  91  56 
107 129 141 150 150 150 150 150 150 150 150 129  80 
131 153 165 174 174 174   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
128 147 157 165 165 165   3   3   3   3   3   3   3 
 79  91  97 102 102 102   3   3   3   3   3   3   3 
After sending and receiving ghost rows if checkerboard 
Should be halfway through core matrix calculation
Here is the matrix that should have received the rows if synchronous and odd

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
 63  85  97 106 106 106 106 106 106 106 106  91  56 
107 129 141 150 150 150 150 150 150 150 150 129  80 
131 153 165 174 174 174   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
149 171 183 192 192 192   3   3   3   3   3   3   3 
128 147 157 165 165 165   3   3   3   3   3   3   3 
 79  91  97 102 102 102   3   3   3   3   3   3   3 
Here is the matrix with half the core calculated
Temp2 flag 2

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
  3   3   3   3   3   3   3   3   3   3   3   3   3 
Printing new_temp after completion ofconway's game

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
 63  85  97 106 106 106 106 106 106 106 106  91  56 
107 129 141 150 150 150 150 150 150 150 150 129  80 
131 153 165 174 174 174 174 174 174 174 174 149  92 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
128 147 157 165 165 165 165 165 165 165 165 141  87 
 79  91  97 102 102 102 102 102 102 102 102  87  54 
After conways completed

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
 63  85  97 106 106 106 106 106 106 106 106  91  56 
107 129 141 150 150 150 150 150 150 150 150 129  80 
131 153 165 174 174 174 174 174 174 174 174 149  92 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
128 147 157 165 165 165 165 165 165 165 165 141  87 
 79  91  97 102 102 102 102 102 102 102 102  87  54 

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 1 row_end 13
 63  85  97 106 106 106 106 106 106 106 106  91  56 
107 129 141 150 150 150 150 150 150 150 150 129  80 
131 153 165 174 174 174 174 174 174 174 174 149  92 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
149 171 183 192 192 192 192 192 192 192 192 165 102 
128 147 157 165 165 165 165 165 165 165 165 141  87 
 79  91  97 102 102 102 102 102 102 102 102  87  54 

Matrices
*****************************************
Matrix to send and receive columns

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
Vector type:
count 12
blocklength 1
stride 13
Rows 13 Cols 13 in matrix
Rank 2 sending columns starting at ELEM(new_mat,1,11)=2.000000 sending to 3
Note if row is not 0 it just means that there are ghost rows. When sending the columns we are excluding the ghost rows thus there may be an offset which would explain why rows may not be 0
Rank 2 receiving value at ELEM(new_mat,1,12)=2.000000 from 3
Matrix after sending and receiving columns

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
Matrix to send and receive rows

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
Rank 2 receiving value at ELEM(new_mat,0,0)=2.000000 from 0
Sending total of 13 columns
Rank 2 sending value at ELEM(new_mat,1,0)=2.000000 to 0
Sending total of 13 columns
Matrix after sending and receiving rows

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   1 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   1 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
  2   2   2   2   2   2   2   2   2   2   2   2   3 
Matrices
*****************************************
Updating Border ghost 0
Updating Right Border East
col_start 11 col_end 12
row_start 1 row_end 13
ghost_right 1 k 0 get_col_start 0

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   0 
  0   0   0   0   0   0   0   0   0   0   0  13   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  12   0 
Updating North Row Outer Margin

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   0 
  6  10  10  10  10  10  10  10  10  10  10  13   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  12   0 
Matrix to send and receive columns

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   0 
  6  10  10  10  10  10  10  10  10  10  10  13   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  19   0 
  0   0   0   0   0   0   0   0   0   0   0  12   0 
Vector type:
count 12
blocklength 1
stride 13
Rows 13 Cols 13 in matrix
Rank 2 sending columns starting at ELEM(new_mat,1,11)=13.000000 sending to 3
Note if row is not 0 it just means that there are ghost rows. When sending the columns we are excluding the ghost rows thus there may be an offset which would explain why rows may not be 0
Rank 2 receiving value at ELEM(new_mat,1,12)=0.000000 from 3
Matrix after sending and receiving columns

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   0 
  6  10  10  10  10  10  10  10  10  10  10  13  15 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  12  13 
After sending and receiving ghost cols

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   0 
  6  10  10  10  10  10  10  10  10  10  10  13  15 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  19  21 
  0   0   0   0   0   0   0   0   0   0   0  12  13 
Matrix to send and receive rows

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   0 
  6  10  10  10  10  10  10  10  10  10  10  13  15 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
  6  10  10  10  10   0   0   0   0   0   0  12  13 
Rank 2 receiving value at ELEM(new_mat,0,0)=0.000000 from 0
Sending total of 13 columns
Rank 2 sending value at ELEM(new_mat,1,0)=6.000000 to 0
Sending total of 13 columns
Matrix after sending and receiving rows

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  4   6   6   6   6   6   6   6   6   6   6   9  11 
  6  10  10  10  10  10  10  10  10  10  10  13  15 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
  6  10  10  10  10   0   0   0   0   0   0  12  13 
After sending and receiving ghost rows if checkerboard 
Should be halfway through core matrix calculation
Here is the matrix that should have received the rows if synchronous and odd

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  4   6   6   6   6   6   6   6   6   6   6   9  11 
  6  10  10  10  10  10  10  10  10  10  10  13  15 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
 10  16  16  16  16   0   0   0   0   0   0  19  21 
  6  10  10  10  10   0   0   0   0   0   0  12  13 
Here is the matrix with half the core calculated
Temp2 flag 2

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
Printing new_temp after completion ofconway's game

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  4   6   6   6   6   6   6   6   6   6   6   9  11 
  6  10  10  10  10  10  10  10  10  10  10  13  15 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
  6  10  10  10  10  10  10  10  10  10  10  12  13 
After conways completed

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  4   6   6   6   6   6   6   6   6   6   6   9  11 
  6  10  10  10  10  10  10  10  10  10  10  13  15 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
  6  10  10  10  10  10  10  10  10  10  10  12  13 

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  4   6   6   6   6   6   6   6   6   6   6   9  11 
  6  10  10  10  10  10  10  10  10  10  10  13  15 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
  6  10  10  10  10  10  10  10  10  10  10  12  13 
Matrix to send and receive columns

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  4   6   6   6   6   6   6   6   6   6   6   9  11 
  6  10  10  10  10  10  10  10  10  10  10  13  15 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
  6  10  10  10  10  10  10  10  10  10  10  12  13 
Vector type:
count 12
blocklength 1
stride 13
Rows 13 Cols 13 in matrix
Rank 2 sending columns starting at ELEM(new_mat,1,11)=13.000000 sending to 3
Note if row is not 0 it just means that there are ghost rows. When sending the columns we are excluding the ghost rows thus there may be an offset which would explain why rows may not be 0
Rank 2 receiving value at ELEM(new_mat,1,12)=15.000000 from 3
Matrix after sending and receiving columns

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  4   6   6   6   6   6   6   6   6   6   6   9  11 
  6  10  10  10  10  10  10  10  10  10  10  13  15 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
  6  10  10  10  10  10  10  10  10  10  10  12  13 

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  4   6   6   6   6   6   6   6   6   6   6   9  11 
  6  10  10  10  10  10  10  10  10  10  10  13  15 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
  6  10  10  10  10  10  10  10  10  10  10  12  13 
Matrix to send and receive rows

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  4   6   6   6   6   6   6   6   6   6   6   9  11 
  6  10  10  10  10  10  10  10  10  10  10  13  15 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
  6  10  10  10  10  10  10  10  10  10  10  12  13 
Rank 2 receiving value at ELEM(new_mat,0,0)=4.000000 from 0
Sending total of 13 columns
Rank 2 sending value at ELEM(new_mat,1,0)=6.000000 to 0
Sending total of 13 columns
Matrix after sending and receiving rows

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  4   6   6   6   6   6   6   6   6   6   6   9  11 
  6  10  10  10  10  10  10  10  10  10  10  13  15 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
  6  10  10  10  10  10  10  10  10  10  10  12  13 

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  4   6   6   6   6   6   6   6   6   6   6   9  11 
  6  10  10  10  10  10  10  10  10  10  10  13  15 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
 10  16  16  16  16  16  16  16  16  16  16  19  21 
  6  10  10  10  10  10  10  10  10  10  10  12  13 
Updating Border ghost 0
Updating Right Border East
col_start 11 col_end 12
row_start 1 row_end 13
ghost_right 1 k 0 get_col_start 0

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   1 
  2   2   2   2   2   2   2   2   2   2   2 107   3 
  2   2   2   2   2   2   2   2   2   2   2 131   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 128   3 
  2   2   2   2   2   2   2   2   2   2   2  79   3 
Updating North Row Outer Margin

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   1 
 46  74  86  86  86  86  86  86  86  86  95 107   3 
  2   2   2   2   2   2   2   2   2   2   2 131   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 128   3 
  2   2   2   2   2   2   2   2   2   2   2  79   3 
Matrix to send and receive columns

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   1 
 46  74  86  86  86  86  86  86  86  86  95 107   3 
  2   2   2   2   2   2   2   2   2   2   2 131   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 149   3 
  2   2   2   2   2   2   2   2   2   2   2 128   3 
  2   2   2   2   2   2   2   2   2   2   2  79   3 
Vector type:
count 12
blocklength 1
stride 13
Rows 13 Cols 13 in matrix
Rank 2 sending columns starting at ELEM(new_mat,1,11)=107.000000 sending to 3
Note if row is not 0 it just means that there are ghost rows. When sending the columns we are excluding the ghost rows thus there may be an offset which would explain why rows may not be 0
Rank 2 receiving value at ELEM(new_mat,1,12)=3.000000 from 3
Matrix after sending and receiving columns

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   1 
 46  74  86  86  86  86  86  86  86  86  95 107 129 
  2   2   2   2   2   2   2   2   2   2   2 131 153 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 128 147 
  2   2   2   2   2   2   2   2   2   2   2  79  91 
After sending and receiving ghost cols

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   1 
 46  74  86  86  86  86  86  86  86  86  95 107 129 
  2   2   2   2   2   2   2   2   2   2   2 131 153 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 149 171 
  2   2   2   2   2   2   2   2   2   2   2 128 147 
  2   2   2   2   2   2   2   2   2   2   2  79  91 
Matrix to send and receive rows

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  0   0   0   0   0   0   0   0   0   0   0   0   1 
 46  74  86  86  86  86  86  86  86  86  95 107 129 
 58  94 110 110 110   2   2   2   2   2   2 131 153 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 58  94 110 110 110   2   2   2   2   2   2 128 147 
 36  58  68  68  68   2   2   2   2   2   2  79  91 
Rank 2 receiving value at ELEM(new_mat,0,0)=0.000000 from 0
Sending total of 13 columns
Rank 2 sending value at ELEM(new_mat,1,0)=46.000000 to 0
Sending total of 13 columns
Matrix after sending and receiving rows

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
 22  36  42  42  42  42  42  42  42  42  51  63  85 
 46  74  86  86  86  86  86  86  86  86  95 107 129 
 58  94 110 110 110   2   2   2   2   2   2 131 153 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 58  94 110 110 110   2   2   2   2   2   2 128 147 
 36  58  68  68  68   2   2   2   2   2   2  79  91 
After sending and receiving ghost rows if checkerboard 
Should be halfway through core matrix calculation
Here is the matrix that should have received the rows if synchronous and odd

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
 22  36  42  42  42  42  42  42  42  42  51  63  85 
 46  74  86  86  86  86  86  86  86  86  95 107 129 
 58  94 110 110 110   2   2   2   2   2   2 131 153 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 68 110 128 128 128   2   2   2   2   2   2 149 171 
 58  94 110 110 110   2   2   2   2   2   2 128 147 
 36  58  68  68  68   2   2   2   2   2   2  79  91 
Here is the matrix with half the core calculated
Temp2 flag 2

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
  2   2   2   2   2   2   2   2   2   2   2   2   2 
Printing new_temp after completion ofconway's game

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
 22  36  42  42  42  42  42  42  42  42  51  63  85 
 46  74  86  86  86  86  86  86  86  86  95 107 129 
 58  94 110 110 110 110 110 110 110 110 119 131 153 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 58  94 110 110 110 110 110 110 110 110 118 128 147 
 36  58  68  68  68  68  68  68  68  68  73  79  91 
After conways completed

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
 22  36  42  42  42  42  42  42  42  42  51  63  85 
 46  74  86  86  86  86  86  86  86  86  95 107 129 
 58  94 110 110 110 110 110 110 110 110 119 131 153 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 58  94 110 110 110 110 110 110 110 110 118 128 147 
 36  58  68  68  68  68  68  68  68  68  73  79  91 

*****************************************
Total cols 13 Total rows 13

col_start 0 col_end 12
row_start 1 row_end 13
 22  36  42  42  42  42  42  42  42  42  51  63  85 
 46  74  86  86  86  86  86  86  86  86  95 107 129 
 58  94 110 110 110 110 110 110 110 110 119 131 153 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 68 110 128 128 128 128 128 128 128 128 137 149 171 
 58  94 110 110 110 110 110 110 110 110 118 128 147 
 36  58  68  68  68  68  68  68  68  68  73  79  91 

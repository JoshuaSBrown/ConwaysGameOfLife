Matrices
*****************************************
Matrix to send and receive columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 

Vector type:
count 12
blocklength 1
stride 13
Rows 13 Cols 13 in matrix
Rank 1 receiving value at ELEM(new_mat,0,0)=1.000000 from 0
Note rows may not be NULL especially if there are ghost rows above and below the core matrix. When we send the columns we are excluding the elements that exist in the ghost rows.Rank 1 sending value at ELEM(new_mat,0,1)=1.000000 to 0
Matrix after sending and receiving columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 


*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 

Matrix to send and receive rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 

Rank 1 sending value at ELEM(new_mat,11,0)=0.000000 to 3
Sending total of 13 columns
Rank 1 receiving value at ELEM(new_mat,12,0)=1.000000 from 3
Sending total of 13 columns
Matrix after sending and receiving rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  2   3   3   3   3   3   3   3   3   3   3   3   3 


*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  2   3   3   3   3   3   3   3   3   3   3   3   3 

Matrices
*****************************************
Updating Border ghost 0
Updating Left Border West
col_start 1 col_end 2
row_start 0 row_end 11
ghost_left 1 k 0 get_col_start 1

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  0   3   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   0   0   0   0   0   0   0   0   0   0   0   0 
  0   0   0   0   0   0   0   0   0   0   0   0   0 

Bottom Row South Outer Margin
col_start 1 col_end 13
row_start 11 row_end 12
get_end 12 ghost_below 1 k 0

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  0   3   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0  11  14  14  14  14  14  14  14  14  14  14   9 
  0   0   0   0   0   0   0   0   0   0   0   0   0 

Matrix to send and receive columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  0   3   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0   5   0   0   0   0   0   0   0   0   0   0   0 
  0  11  14  14  14  14  14  14  14  14  14  14   9 
  0   0   0   0   0   0   0   0   0   0   0   0   0 

Vector type:
count 12
blocklength 1
stride 13
Rows 13 Cols 13 in matrix
Rank 1 receiving value at ELEM(new_mat,0,0)=0.000000 from 0
Note rows may not be NULL especially if there are ghost rows above and below the core matrix. When we send the columns we are excluding the elements that exist in the ghost rows.Rank 1 sending value at ELEM(new_mat,0,1)=3.000000 to 0
Matrix after sending and receiving columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  2   3   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  9  11  14  14  14  14  14  14  14  14  14  14   9 
  0   0   0   0   0   0   0   0   0   0   0   0   0 

After sending and receiving ghost cols

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  2   3   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  3   5   0   0   0   0   0   0   0   0   0   0   0 
  9  11  14  14  14  14  14  14  14  14  14  14   9 
  0   0   0   0   0   0   0   0   0   0   0   0   0 

Matrix to send and receive rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  2   3   5   5   5   5   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  9  11  14  14  14  14  14  14  14  14  14  14   9 
  0   0   0   0   0   0   0   0   0   0   0   0   0 

Rank 1 sending value at ELEM(new_mat,11,0)=9.000000 to 3
Sending total of 13 columns
Rank 1 receiving value at ELEM(new_mat,12,0)=0.000000 from 3
Sending total of 13 columns
Matrix after sending and receiving rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  2   3   5   5   5   5   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 

After sending and receiving ghost rows if checkerboard 
Should be halfway through core matrix calculation
Here is the matrix that should have received the rows if synchronous and odd

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  2   3   5   5   5   5   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  3   5   8   8   8   8   0   0   0   0   0   0   0 
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 

Here is the matrix with half the core calculated
Temp2 flag 2

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 

Printing new_temp after completion ofconway's game

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  2   3   5   5   5   5   5   5   5   5   5   5   3 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 

After conways completed

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  2   3   5   5   5   5   5   5   5   5   5   5   3 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 


*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  2   3   5   5   5   5   5   5   5   5   5   5   3 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 

Matrix to send and receive columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  2   3   5   5   5   5   5   5   5   5   5   5   3 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 

Vector type:
count 12
blocklength 1
stride 13
Rows 13 Cols 13 in matrix
Rank 1 receiving value at ELEM(new_mat,0,0)=2.000000 from 0
Note rows may not be NULL especially if there are ghost rows above and below the core matrix. When we send the columns we are excluding the elements that exist in the ghost rows.Rank 1 sending value at ELEM(new_mat,0,1)=3.000000 to 0
Matrix after sending and receiving columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  2   3   5   5   5   5   5   5   5   5   5   5   3 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 


*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  2   3   5   5   5   5   5   5   5   5   5   5   3 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 

Matrix to send and receive rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  2   3   5   5   5   5   5   5   5   5   5   5   3 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 

Rank 1 sending value at ELEM(new_mat,11,0)=9.000000 to 3
Sending total of 13 columns
Rank 1 receiving value at ELEM(new_mat,12,0)=13.000000 from 3
Sending total of 13 columns
Matrix after sending and receiving rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  2   3   5   5   5   5   5   5   5   5   5   5   3 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 


*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  2   3   5   5   5   5   5   5   5   5   5   5   3 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  3   5   8   8   8   8   8   8   8   8   8   8   5 
  9  11  14  14  14  14  14  14  14  14  14  14   9 
 13  15  18  18  18  18  18  18  18  18  18  18  11 

Updating Border ghost 0
Updating Left Border West
col_start 1 col_end 2
row_start 0 row_end 11
ghost_left 1 k 0 get_col_start 1

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  0  23   1   1   1   1   1   1   1   1   1   1   1 
  0  37   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  61   1   1   1   1   1   1   1   1   1   1   1 
  0   1   1   1   1   1   1   1   1   1   1   1   1 
  2   3   3   3   3   3   3   3   3   3   3   3   3 

Bottom Row South Outer Margin
col_start 1 col_end 13
row_start 11 row_end 12
get_end 12 ghost_below 1 k 0

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  0  23   1   1   1   1   1   1   1   1   1   1   1 
  0  37   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  61   1   1   1   1   1   1   1   1   1   1   1 
  0  85  97 106 106 106 106 106 106 106 106  91  56 
  2   3   3   3   3   3   3   3   3   3   3   3   3 

Matrix to send and receive columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  0  23   1   1   1   1   1   1   1   1   1   1   1 
  0  37   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  43   1   1   1   1   1   1   1   1   1   1   1 
  0  61   1   1   1   1   1   1   1   1   1   1   1 
  0  85  97 106 106 106 106 106 106 106 106  91  56 
  2   3   3   3   3   3   3   3   3   3   3   3   3 

Vector type:
count 12
blocklength 1
stride 13
Rows 13 Cols 13 in matrix
Rank 1 receiving value at ELEM(new_mat,0,0)=0.000000 from 0
Note rows may not be NULL especially if there are ghost rows above and below the core matrix. When we send the columns we are excluding the elements that exist in the ghost rows.Rank 1 sending value at ELEM(new_mat,0,1)=23.000000 to 0
Matrix after sending and receiving columns

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
 11  23   1   1   1   1   1   1   1   1   1   1   1 
 18  37   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 39  61   1   1   1   1   1   1   1   1   1   1   1 
 63  85  97 106 106 106 106 106 106 106 106  91  56 
  2   3   3   3   3   3   3   3   3   3   3   3   3 

After sending and receiving ghost cols

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
 11  23   1   1   1   1   1   1   1   1   1   1   1 
 18  37   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 21  43   1   1   1   1   1   1   1   1   1   1   1 
 39  61   1   1   1   1   1   1   1   1   1   1   1 
 63  85  97 106 106 106 106 106 106 106 106  91  56 
  2   3   3   3   3   3   3   3   3   3   3   3   3 

Matrix to send and receive rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
 11  23  29  34  34  34   1   1   1   1   1   1   1 
 18  37  47  55  55  55   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 39  61  73  82  82  82   1   1   1   1   1   1   1 
 63  85  97 106 106 106 106 106 106 106 106  91  56 
  2   3   3   3   3   3   3   3   3   3   3   3   3 

Rank 1 sending value at ELEM(new_mat,11,0)=63.000000 to 3
Sending total of 13 columns
Rank 1 receiving value at ELEM(new_mat,12,0)=2.000000 from 3
Sending total of 13 columns
Matrix after sending and receiving rows

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
 11  23  29  34  34  34   1   1   1   1   1   1   1 
 18  37  47  55  55  55   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 39  61  73  82  82  82   1   1   1   1   1   1   1 
 63  85  97 106 106 106 106 106 106 106 106  91  56 
107 129 141 150 150 150 150 150 150 150 150 129  80 

After sending and receiving ghost rows if checkerboard 
Should be halfway through core matrix calculation
Here is the matrix that should have received the rows if synchronous and odd

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
 11  23  29  34  34  34   1   1   1   1   1   1   1 
 18  37  47  55  55  55   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 21  43  55  64  64  64   1   1   1   1   1   1   1 
 39  61  73  82  82  82   1   1   1   1   1   1   1 
 63  85  97 106 106 106 106 106 106 106 106  91  56 
107 129 141 150 150 150 150 150 150 150 150 129  80 

Here is the matrix with half the core calculated
Temp2 flag 2

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 
  1   1   1   1   1   1   1   1   1   1   1   1   1 

Printing new_temp after completion ofconway's game

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
 11  23  29  34  34  34  34  34  34  34  34  29  18 
 18  37  47  55  55  55  55  55  55  55  55  47  29 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 39  61  73  82  82  82  82  82  82  82  82  71  44 
 63  85  97 106 106 106 106 106 106 106 106  91  56 
107 129 141 150 150 150 150 150 150 150 150 129  80 

After conways completed

*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
 11  23  29  34  34  34  34  34  34  34  34  29  18 
 18  37  47  55  55  55  55  55  55  55  55  47  29 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 39  61  73  82  82  82  82  82  82  82  82  71  44 
 63  85  97 106 106 106 106 106 106 106 106  91  56 
107 129 141 150 150 150 150 150 150 150 150 129  80 


*****************************************
Total cols 13 Total rows 13

col_start 1 col_end 13
row_start 0 row_end 12
 11  23  29  34  34  34  34  34  34  34  34  29  18 
 18  37  47  55  55  55  55  55  55  55  55  47  29 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 21  43  55  64  64  64  64  64  64  64  64  55  34 
 39  61  73  82  82  82  82  82  82  82  82  71  44 
 63  85  97 106 106 106 106 106 106 106 106  91  56 
107 129 141 150 150 150 150 150 150 150 150 129  80 

